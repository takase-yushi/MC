cmake_minimum_required(VERSION 3.6.2)

project(dummy NONE)
if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
    set(CMAKE_CXX_COMPILER clang++)
endif()
project(Encoder)

# enable C++11
set(CMAKE_CXX_STANDARD, 17)
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--stack,10000000")

if(NOT(CMAKE_SYSTEM_NAME MATCHES "Windows"))
#    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
#    set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
endif()

find_package(OpenCV REQUIRED)

message(STATUS "OpenCV library status:")
message(STATUS "    config: ${OpenCV_DIR}")
message(STATUS "    version: ${OpenCV_VERSION}")
message(STATUS "    libraries: ${OpenCV_LIBS}")
message(STATUS "    include path: ${OpenCV_INCLUDE_DIRS}")

# OpenMP settings
find_package( OpenMP )
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

set(SOURCE_FILES src/main.cpp)
add_executable(Encoder src/Config.cpp includes/Config.h src/main.cpp src/psnr.cpp includes/psnr.h src/main.cpp includes/Utils.h src/Utils.cpp src/ME.cpp includes/ME.hpp includes/Vector.hpp includes/Point.hpp includes/saturate.hpp src/TriangleDivision.cpp includes/TriangleDivision.h src/CodingTreeUnit.cpp includes/CodingTreeUnit.h src/Reconstruction.cpp includes/Reconstruction.h src/CollocatedMvTree.cpp includes/CollocatedMvTree.h src/ImageUtil.cpp includes/ImageUtil.h src/Encode.cpp includes/Encode.h test/tests.cpp includes/tests.h src/Analyzer.cpp includes/Analyzer.h src/FlagsCodeSum.cpp includes/FlagsCodeSum.h includes/picojson.h src/Decoder.cpp includes/Decoder.h)
if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
    target_compile_options(Encoder PUBLIC -O3 -g3)
else()
    target_compile_options(Encoder PUBLIC -O3 -fopenmp -g3)
endif()
target_compile_options(Encoder PUBLIC -O3 -fopenmp -g3)
include_directories(${OpenCV_INCLUDE_DIRS})
target_link_libraries(Encoder ${OpenCV_LIBS})

add_definitions(-std=c++1y)
